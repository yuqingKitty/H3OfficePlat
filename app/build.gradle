apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.aotuo.h3officeplat"
        minSdkVersion 20
        targetSdkVersion 29
        versionCode 2
        versionName "1.1.0"
        flavorDimensions "versionCode"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            //选择要添加的对应 cpu 类型的 .so 库。
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME : applicationId,
                JPUSH_APPKEY : "e9bc3e272cf462da31bbd273", //JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
        ]
    }

    packagingOptions {
        doNotStrip '*/mips/*.so'
        doNotStrip '*/mips64/*.so'
    }

    signingConfigs {
        //debug版签名配置
        debug {
            storeFile file(SIGN_STORE_FILE)
            storePassword SIGN_STORE_PWD
            keyAlias SIGN_KEY_ALIAS
            keyPassword SIGH_KEY_PWD
        }

        //发布版签名配置
        release {
            //密钥文件路径
            storeFile file(SIGN_STORE_FILE)
            //密钥文件密码
            storePassword SIGN_STORE_PWD
            //key别名
            keyAlias SIGN_KEY_ALIAS
            //key密码
            keyPassword SIGH_KEY_PWD
        }
    }

    buildTypes {
        debug {
            multiDexEnabled true
            minifyEnabled false
            zipAlignEnabled true
            shrinkResources false
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            multiDexEnabled true
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant->
        variant.outputs.all { output->
            def buildName = variant.buildType.name.equalsIgnoreCase("debug")?"_debug":variant.buildType.name.equalsIgnoreCase("preview")?"_${version_build}":""
            def fileName = "${variant.productFlavors[0].name}_v${variant.versionName}${buildName}.apk"
            outputFileName = fileName
        }
    }

    productFlavors {
        "h3office" {} //官网
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation 'com.github.lzyzsd:jsbridge:1.0.4'
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation 'cn.jiguang.sdk:jpush:3.3.4'
    // 此处以JPush 3.3.4 版本为例。
    implementation 'cn.jiguang.sdk:jcore:2.1.2'
    // 此处以JCore 2.1.2 版本为例。
    implementation project(':zxinglib')
}
